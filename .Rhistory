x <- rnorm(300)
hist(x, col='red')
install.packages("tidyverse")
install.packages(rmarkdown)
install.packages("rmarkdown")
install.packages(c("backports", "BH", "callr", "car", "carData", "clipr", "curl", "data.table", "FactoMineR", "fansi", "ggrepel", "glue", "isoband", "leaps", "lme4", "maptools", "multcomp", "nloptr", "openxlsx", "pkgbuild", "pkgconfig", "prettyunits", "progress", "purrr", "quantreg", "R6", "RcppEigen", "sp", "SparseM", "testthat", "withr", "zip"))
install.packages("tidyverse")
library("tidyverse")
install.packages("tidyverse") as admin
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
# Graphique
plot(1)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
## Contexte
## Données
```{r}
# Importer données
#da <- read.table("")
da <- iris
# Importer données
#da <- read.table("")
da <- iris
Mes données ont `r now(da)` lignes.
```{r}
# Graphique
plot(1)
# Graphique
plot(1)
```{r}
```{r}
# Graphique
plot(1)
source("Graphique1.r")
```{r}
# Graphique
plot(1)
source("Graphique1.r")
Mes données ont `r now(da)` lignes.
```{r}
source("Graphique1.r")
# Graphique
plot(1)
source("Graphique1.r")
# Graphique
plot(1)
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
## Contexte
## Données
```{r, eval = true, echo = false}
# Importer données
#da <- read.table("")
da <- iris
# Importer données
#da <- read.table("")
da <- iris
Mes données ont `r now(da)` lignes.
```{r, eval = true, echo = false}
source("Graphique1.r")
source("Données1.r")
knitr::opts_chunk$set(echo = TRUE)
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
## Contexte
## Données
```{r,echo=FALSE}
source("Données1.r")
source("Données1.r")
Mes données ont `r nrow(da)` lignes.
```{r, echo=FALSE}
source("Graphique1.r")
source("Graphique1.r")
knitr::opts_chunk$set(echo = TRUE)
source("Données1.r")
---
title: "Test MultiFichier"
author: "Axel Faligot-Girardelli"
date: "29/04/2020"
output: html_document: toc: yes
---
install.packages("tinytex")
tinytex::install_tinytex()
setwd("C:/Users/axelf/Desktop/Codage/OPEN/Python/IsaraS8OpenDeepLearning")
setwd("C:/Users/axelf/Desktop/Codage/OPEN/Python/IsaraS8OpenDeepLearning")
library(ggplot2)
raw <- read.csv("models.csv",sep=",",colClasses=c(rep("numeric",2),"character",rep("numeric",2),"character",rep("numeric",2)),na.strings="NA")
raw$Dataset.d.entraînement <- as.factor(raw$Dataset.d.entraînement)
str(raw)
names(raw)<-c("NbClasses","NbNeurones","DataCat","NbImageTrain","Nbpassages","Dataset","NbTestPic","Accuracy")
raw <- read.csv("models.csv",sep=",",colClasses=c(rep("numeric",2),"character",rep("numeric",2),"character",rep("numeric",2)),na.strings="NA")
names(raw)<-c("NbClasses","NbNeurones","DataCat","NbImageTrain","Nbpassages","Dataset","NbTestPic","Accuracy")
raw$Factor <- paste(raw$NbNeurones, raw$DataCat)
setwd("C:/Users/axelf/Desktop/Codage/OPEN/Python/IsaraS8OpenDeepLearning")
library(ggplot2)
raw <- read.csv("models.csv",sep=",",colClasses=c(rep("numeric",2),"character",rep("numeric",2),"character",rep("numeric",2)),na.strings="NA")
str(raw)
names(raw)<-c("NbClasses","NbNeurones","DataCat","NbImageTrain","Nbpassages","Dataset","NbTestPic","Accuracy")
raw$Factor <- paste(raw$NbNeurones, raw$DataCat)
png("plot1.png",width=800,height=600)
qplot(raw$Nbpassages,raw$Accuracy,data=raw,color=Factor,geom=c("point","smooth"))
qplot(raw$Nbpassages,raw$Accuracy,data=raw,color=Factor) #,geom=c("point","smooth"))
qplot(raw$Nbpassages,raw$Accuracy,color=Factor) #,geom=c("point","smooth"))
qplot(Nbpassages,Accuracy,data=raw,color=Factor) #,geom=c("point","smooth"))
dev.off()
setwd("C:/Users/axelf/Desktop/Codage/OPEN/Python/IsaraS8OpenDeepLearning")
library(ggplot2)
raw <- read.csv("models.csv",sep=",",colClasses=c(rep("numeric",2),"character",rep("numeric",2),"character",rep("numeric",2)),na.strings="NA")
str(raw)
names(raw)<-c("NbClasses","NbNeurones","DataCat","NbImageTrain","Nbpassages","Dataset","NbTestPic","Accuracy")
raw$Factor <- paste(raw$NbNeurones, raw$DataCat)
png("plot1.png",width=800,height=600)
qplot(Nbpassages,Accuracy,data=raw,color=Factor) #,geom=c("point","smooth"))
dev.off()
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom = "auto" )
dev.off()
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom = "auto" )
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom = "smooth" )
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="point"; "smooth" )
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="point", "smooth" )
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="point", "smooth" )
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
png("plot1.png",width=800,height=600)
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
setwd("C:/Users/axelf/Desktop/Codage/OPEN/Python/IsaraS8OpenDeepLearning")
library(ggplot2)
raw <- read.csv("models.csv",sep=",",colClasses=c(rep("numeric",2),"character",rep("numeric",2),"character",rep("numeric",2)),na.strings="NA")
str(raw)
names(raw)<-c("NbClasses","NbNeurones","DataCat","NbImageTrain","Nbpassages","Dataset","NbTestPic","Accuracy")
raw$Factor <- paste(raw$NbNeurones, raw$DataCat)
png("plot1.png",width=800,height=600)
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
dev.off()
png("plot2.png",width=800,height=600)
qplot(NbNeurones,Accuracy,data=raw,color=Factor,geom ="smooth" )
dev.off()
setwd("C:/Users/axelf/Desktop/Codage/OPEN/Python/IsaraS8OpenDeepLearning")
library(ggplot2)
raw <- read.csv("models.csv",sep=",",colClasses=c(rep("numeric",2),"character",rep("numeric",2),"character",rep("numeric",2)),na.strings="NA")
str(raw)
names(raw)<-c("NbClasses","NbNeurones","DataCat","NbImageTrain","Nbpassages","Dataset","NbTestPic","Accuracy")
raw$Factor <- paste(raw$NbNeurones, raw$DataCat)
png("plot1.png",width=800,height=600)
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
dev.off()
png("plot2.png",width=800,height=600)
qplot(NbNeurones,Accuracy,data=raw,color=Factor,geom ="smooth" )
dev.off()
png("plot3.png",width=800,height=600)
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
dev.off()
setwd("C:/Users/axelf/Desktop/Codage/OPEN/Python/IsaraS8OpenDeepLearning")
library(ggplot2)
raw <- read.csv("models.csv",sep=",",colClasses=c(rep("numeric",2),"character",rep("numeric",2),"character",rep("numeric",2)),na.strings="NA")
str(raw)
names(raw)<-c("NbClasses","NbNeurones","DataCat","NbImageTrain","Nbpassages","Dataset","NbTestPic","Accuracy")
raw$Factor <- paste(raw$NbNeurones, raw$DataCat)
png("plot1.png",width=800,height=600)
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
dev.off()
png("plot2.png",width=800,height=600)
qplot(NbNeurones,Accuracy,data=raw,color=Factor,geom ="smooth" )
dev.off()
setwd("C:/Users/axelf/Desktop/Codage/OPEN/Python/IsaraS8OpenDeepLearning")
library(ggplot2)
raw <- read.csv("models.csv",sep=",",colClasses=c(rep("numeric",2),"character",rep("numeric",2),"character",rep("numeric",2)),na.strings="NA")
str(raw)
names(raw)<-c("NbClasses","NbNeurones","DataCat","NbImageTrain","Nbpassages","Dataset","NbTestPic","Accuracy")
raw$Factor <- paste(raw$NbNeurones, raw$DataCat)
png("plot1.png",width=800,height=600)
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
dev.off()
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
dev.off()
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
qplot(NbNeurones,Accuracy,data=raw,color=Factor,geom ="smooth" )
raw$Factor <- paste(raw$NbNeurones, raw$DataCat, raw$Nbpassages)
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
png("plot1.png",width=800,height=600)
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
dev.off()
raw$Factor <- paste(raw$DataCat)
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
qplot(NbNeurones,Accuracy,data=raw,color=Factor,geom ="smooth" )
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
dev.off()
qplot(NbNeurones,Accuracy,data=raw,color=Factor,geom ="smooth" )
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
setwd("C:/Users/axelf/Desktop/Codage/OPEN/Python/IsaraS8OpenDeepLearning")
library(ggplot2)
raw <- read.csv("models.csv",sep=",",colClasses=c(rep("numeric",2),"character",rep("numeric",2),"character",rep("numeric",2)),na.strings="NA")
setwd("C:/Users/axelf/Desktop/Codage/OPEN/Python/IsaraS8OpenDeepLearning")
library(ggplot2)
raw <- read.csv("models.csv",sep=",",colClasses=c(rep("numeric",2),"character",rep("numeric",2),"character",rep("numeric",2)),na.strings="NA")
str(raw)
names(raw)<-c("NbClasses","NbNeurones","DataCat","NbImageTrain","Nbpassages","Dataset","NbTestPic","Accuracy")
raw$Factor <- paste(raw$NbNeurones, raw$DataCat)
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
png("plot1.png",width=800,height=600)
qplot(NbNeurones,Accuracy,data=raw,color=Factor,geom ="smooth" )
dev.off()
qplot(NbNeurones,Accuracy,data=raw,color=Factor,geom ="smooth" )
raw$Factor <- paste(raw$DataCat)
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
qplot(NbNeurones,Accuracy,data=raw,color=Factor,geom ="smooth" )
qplot(NbNeurones,Accuracy,data=raw,color=Factor,geom ="smooth" )
qplot(NbImageTrain,Accuracy,data=raw,color=Factor,geom ="smooth" )
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
library(ggplot2)
raw <- read.csv("models.csv",sep=",",colClasses=c(rep("numeric",2),"character",rep("numeric",2),"character",rep("numeric",2)),na.strings="NA")
str(raw)
names(raw)<-c("NbClasses","NbNeurones","DataCat","NbImageTrain","Nbpassages","Dataset","NbTestPic","Accuracy")
raw$Factor <- paste(raw$NbNeurones, raw$DataCat)
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
dev.off()
qplot(NbImageTrain,Accuracy,data=raw,color=Factor,geom ="smooth" )
qplot(NbImageTrain~Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
qplot(NbImageTrain,Nbpassages,data=raw,color=Factor,geom ="smooth" )
png("plot2.png",width=800,height=600)
qplot(NbImageTrain,Nbpassages,data=raw,color=Factor,geom ="smooth" )
dev.off()
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
raw <- read.csv("models.csv",sep=",",colClasses=c(rep("numeric",2),"character",rep("numeric",2),"character",rep("numeric",2)),na.strings="NA")
str(raw)
names(raw)<-c("NbClasses","NbNeurones","DataCat","NbImageTrain","Nbpassages","Dataset","NbTestPic","Accuracy")
raw$Factor <- paste(raw$NbImageTrain, raw$DataCat)
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
setwd("C:/Users/axelf/Desktop/Codage/OPEN/Python/IsaraS8OpenDeepLearning")
library(ggplot2)
raw <- read.csv("models.csv",sep=",",colClasses=c(rep("numeric",2),"character",rep("numeric",2),"character",rep("numeric",2)),na.strings="NA")
str(raw)
names(raw)<-c("NbClasses","NbNeurones","DataCat","NbImageTrain","Nbpassages","Dataset","NbTestPic","Accuracy")
raw$Factor <- paste(raw$NbImageTrain, raw$DataCat)
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
qplot(NbNeurones,Accuracy,data=raw,color=Factor,geom ="smooth" )
qplot(NbTestPic,Accuracy,data=raw,color=Factor,geom ="smooth" )
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
raw$Factor <- paste(raw$NbNeurones, raw$DataCat)
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
plot1.png
png("plot1.png",width=800,height=600)
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth" )
dev.off()
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth",main = "Analyse de la précision de la reconnaissance d'image d'un programme DeepLearning" ,xlab = "Nombre de passages",ylab = "Précision de l'IA")
png("plot1.png",width=800,height=600)
qplot(Nbpassages,Accuracy,data=raw,color=Factor,geom ="smooth",main = "Analyse de la précision de la reconnaissance d'image d'un programme DeepLearning" ,xlab = "Nombre de passages",ylab = "Précision de l'IA")
dev.off()
